//require('dontenv').config();
const { 
    createBot, 
    createProvider, 
    createFlow, 
    addKeyword,
    EVENTS, 
    CoreClass } = require('@bot-whatsapp/bot')

const QRPortalWeb = require('@bot-whatsapp/portal')
const BaileysProvider = require('@bot-whatsapp/provider/baileys')
const MockAdapter = require('@bot-whatsapp/database/mock')

const ChatGPTClass = require('./chatgpt.class')

const createBotGPT= async({provider, database}) =>  {

    return new ChatGPTClass(database, provider);
}


//const chatGPT = new ChatGPTClass(new MockAdapter(), createProvider(BaileysProvider))



const flowSecundario = addKeyword(['0', 'siguiente'])
.addAnswer('Muchas gracias por utilizar el chatBot del programa de Ingenieria de sistemas de la Universidad Mariana')
.addAnswer('Si desea volver al incio escriba *menu* para regresar al bot ðŸ¤–')
.addAnswer('De lo contrario puedes salir del chat ðŸ˜ŠðŸ‘‹');



const flowPregunta = addKeyword(['1', 'uno', 'nÃºmero 1', 'nÃºmero uno', 'numero 1', 'numero uno', 'nÃºmero1', 'numero1']).addAnswer(
    [
    
      'ðŸ“„ A continuaciÃ³n podrÃ¡s escribir tu pregunta acerca de tu proceso investigativo',
      '','',
      'ðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰ '       
    ],
    null,
    null,
    [flowSecundario])


const flowFechas = addKeyword(['2', 'dos', 'nÃºmero dos', 'nÃºmero 2', 'numero dos', 'numero 2', 'nÃºmero2', 'numero2']).addAnswer(
    [
        'ðŸ™Œ Selecciona una de las siguientes opciones',
        'ðŸ‘‰ *1* Para fechas de sustentaciÃ³n de tesis ðŸ¤”ðŸ“œ',
        'ðŸ‘‰ *2* Para fechas de grados ðŸŽ“ðŸ¥³',
        'ðŸ‘‰ *3* Para fechas programadas de sustentacion de tesis ðŸ’ªðŸ“‘',
        '','',
        'ðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰'
    ],
    null,
    null,
    [flowSecundario]
)

    const flowPeticion = addKeyword(['1', 'peticiÃ³n'])
    .addAnswer('ðŸ™Œ Tu solicitud de peticiÃ³n serÃ¡ procesada')    
    .addAnswer('Â¿Cual es tu peticion?',{ capture:true }, async (ctx, {flowDynamic}) => { 
    const peticion = ctx.body 
    console.log(peticion)
    return flowDynamic(`Tu peticion fue recibida con exito
    \nðŸ‘‰ *Menu* Para finalizar regresar al menÃº principal ðŸ˜‰
    \nðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰`)


},[flowSecundario])

    const flowQueja = addKeyword(['2', 'queja'])
    .addAnswer('ðŸ™Œ Tu solicitud de queja serÃ¡ procesada')    
    .addAnswer('Â¿Cual es tu queja?',{ capture:true }, async (ctx, {flowDynamic}) => { 
    const queja = ctx.body 
    console.log(queja)
    return flowDynamic(`Tu queja fue recibida con exito\nðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰`)


},[flowSecundario])

    const flowRecurso = addKeyword(['3', 'recurso'])
    .addAnswer('ðŸ™Œ Tu solicitud de recurso serÃ¡ procesada')    
    .addAnswer('Â¿Cual es tu solicitud de recurso?',{ capture:true }, async (ctx, {flowDynamic}) => { 
    const recurso = ctx.body 
    console.log(recurso)
    return flowDynamic(`Tu solicitud de recurso fue recibida con exito\nðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰`)


},[flowSecundario])

    const flowSolicitud = addKeyword(['4', 'solicitud'])
    .addAnswer('ðŸ™Œ Tu solicitud serÃ¡ procesada')    
    .addAnswer('Â¿Cual es tu solicitud?',{ capture:true }, async (ctx, {flowDynamic}) => { 
    const solicitud = ctx.body 
    console.log(solicitud)
    return flowDynamic(`Tu solicitud fue recibida con exito\nðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰`)


},[flowSecundario])

    const flowFelicitacion = addKeyword(['5', 'felicitacion'])
    .addAnswer('ðŸ™Œ Deja un mensaje de felicitacion')    
    .addAnswer('Â¿Cual es tu mensaje?',{ capture:true }, async (ctx, {flowDynamic}) => { 
    const felicitacion = ctx.body 
    console.log(felicitacion)
    return flowDynamic(`Tu felicitacion fue recibida con exito\nðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰`)


},[flowSecundario])

    const flowObservaciones = addKeyword(['6', 'observacion'])
    .addAnswer('ðŸ™Œ Tu observacion serÃ¡ procesada')    
    .addAnswer('Â¿Cual es tu observacion?',{ capture:true }, async (ctx, {flowDynamic}) => { 
    const observacion = ctx.body 
    console.log(observacion)
    return flowDynamic(`Tu observacion fue recibida con exito\nðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰`)


},[flowSecundario])

const flowPqrs = addKeyword(['3', 'tres', 'nÃºmero tres', 'nÃºmero 3', 'numero tres', 'numero 3', 'nÃºmero3', 'numero3']).addAnswer(
    [
        'ðŸš€ Selecciona una opciÃ³n',
        'ðŸ‘‰ *1* Peticion ðŸŽ“ðŸ¥³',
        'ðŸ‘‰ *2* Queja ðŸŽ“ðŸ¥³',
        'ðŸ‘‰ *3* Recurso ðŸŽ“ðŸ¥³',
        'ðŸ‘‰ *4* Solicitud ðŸŽ“ðŸ¥³',
        'ðŸ‘‰ *5* FelicitacionðŸŽ“ðŸ¥³',
        'ðŸ‘‰ *6* Otras observacionesðŸŽ“ðŸ¥³',
        '','',
        'ðŸ‘‰ *0* Para finalizar esta opcion ðŸ˜‰'
    ],
    null,
    null,
    [flowSecundario,flowPeticion,flowQueja,flowRecurso,flowSolicitud,flowFelicitacion,flowObservaciones]
)



const flowFinal = addKeyword(['discord']).addAnswer(
    ['ðŸ¤ª Ãšnete al discord', 'https://link.codigoencasa.com/DISCORD', '\n*2* Para siguiente paso.'],
    null,
    null,
    [flowSecundario]
)

const flowMenu = addKeyword(['menu', 'menÃº'])
    .addAnswer('ðŸ™Œ MenÃº principal')
    .addAnswer(
        [
            'Selecciona la opciÃ³n de tu interÃ©s, respondiendo con un nÃºmero de la siguiente lista',
            '',
            'ðŸ‘‰ *1* Para preguntas sobre el proceso investigativo ðŸ¤”ðŸ“œ',
            '',
            'ðŸ‘‰ *2* Para consultar las fechas disponibles de sustentaciÃ³n de tesis ðŸ’ªðŸ“œ y fechas de grados ðŸŽ“ðŸ¥³',
            '',
            'ðŸ‘‰ *3* Para PQRS del Chat Bot ðŸš¦ðŸ›‘',
        ],
        null,
        null,
        [ flowPregunta, flowPqrs, flowFechas, flowFinal]
    );



const flowPrincipal = addKeyword([EVENTS.WELCOME])
    //.addAnswer('Digite su correo electronico institucional',{capture:true})
    .addAnswer('ðŸ™Œ Hola, bienvenido al Chat Bot del proceso investigativo de *IngenierÃ­a de Sistemas* de la *Universidad Mariana*')
    .addAnswer('Â¿Cual es tu correo institucional?',{capture:true},(ctx, {fallBack})=>
    {        
        if(!ctx.body.includes('@umariana.edu.co'))
        {
            return fallBack()
        }
        //console.log('Mensaje entrante', ctx.body)
    })
    .addAnswer(
        [
            'Selecciona la opciÃ³n de tu interÃ©s, respondiendo con un nÃºmero de la siguiente lista',
            '',
            'ðŸ‘‰ *1* Para preguntas sobre el proceso investigativo ðŸ¤”ðŸ“œ',
            '',
            'ðŸ‘‰ *2* Para consultar las fechas disponibles de sustentaciÃ³n de tesis ðŸ’ªðŸ“œ y fechas de grados ðŸŽ“ðŸ¥³',
            '',
            'ðŸ‘‰ *3* Para PQRS del Chat Bot ðŸš¦ðŸ›‘',
        ],
        null,
        null,
        [flowPregunta, flowPqrs, flowFechas, flowFinal, flowMenu]
    )

    


    

const main = async () => {
    const adapterDB = new MockAdapter()
    const adapterFlow = createFlow([flowPrincipal, flowMenu, flowSecundario])
    const adapterProvider = createProvider(BaileysProvider)


    createBot({
        flow: adapterFlow,
        provider: adapterProvider,
        database: adapterDB,
    })

    /**createBotGPT({
        provider: adapterProvider,
        database: adapterDB,
    })**/

    QRPortalWeb()
}

main()